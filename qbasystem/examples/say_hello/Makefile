#############################################################################
# Makefile for building: say_hello
# Generated by qmake (1.07a) (Qt 3.3.1) on: Thu Aug 26 15:04:31 2004
# Project:  say_hello.pro
# Template: app
# Command: $(QMAKE) -o Makefile say_hello.pro
#############################################################################

####### Compiler, tools and options

CC       = gcc
CXX      = g++
LEX      = flex
YACC     = yacc
CFLAGS   = -pipe -Wall -W -O2 -D_REENTRANT  -DHAVE_CONFIG_H -DHAVE_GCC -DHAVE_GPP -DHAVE_PKG_CONFIG -DQT_NO_DEBUG -DQT_THREAD_SUPPORT -DQT_SHARED
CXXFLAGS = -pipe -Wall -W -O2 -D_REENTRANT  -DHAVE_CONFIG_H -DHAVE_GCC -DHAVE_GPP -DHAVE_PKG_CONFIG -DQT_NO_DEBUG -DQT_THREAD_SUPPORT -DQT_SHARED
LEXFLAGS = 
YACCFLAGS= -d
INCPATH  = -I/usr/local/qt/mkspecs/default -I. -I$(QTDIR)/include -I.ui/ -I. -I.moc/
LINK     = g++
LFLAGS   =  -Wl,-rpath,$(QTDIR)/lib
LIBS     = $(SUBLIBS) -L$(QTDIR)/lib -L/usr/X11R6/lib -lqt-mt -lXext -lX11 -lm -lpthread
AR       = ar cqs
RANLIB   = 
MOC      = $(QTDIR)/bin/moc
UIC      = $(QTDIR)/bin/uic
QMAKE    = qmake
TAR      = tar -cf
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= $(COPY)
COPY_DIR = $(COPY) -r
INSTALL_FILE= $(COPY_FILE)
INSTALL_DIR = $(COPY_DIR)
DEL_FILE = rm -f
SYMLINK  = ln -sf
DEL_DIR  = rmdir
MOVE     = mv -f
CHK_DIR_EXISTS= test -d
MKDIR    = mkdir -p

####### Output directory

OBJECTS_DIR = .obj/

####### Files

HEADERS = 
SOURCES = main.cpp
OBJECTS = .obj/main.o \
		.obj/sayhello_gui.o
FORMS = sayhello_gui.ui
UICDECLS = .ui/sayhello_gui.h
UICIMPLS = .ui/sayhello_gui.cpp
SRCMOC   = .moc/moc_sayhello_gui.cpp
OBJMOC = .obj/moc_sayhello_gui.o
DIST	   = .configure.def \
		paths.qbas \
		check.qbas \
		check.qbas \
		check.qbas \
		check.qbas \
		check.qbas \
		check.qbas \
		check.qbas \
		check.qbas \
		build.definition \
		main.qbas \
		say_hello.pro
QMAKE_TARGET = say_hello
DESTDIR  = 
TARGET   = say_hello

first: all
####### Implicit rules

.SUFFIXES: .c .o .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(UICDECLS) $(OBJECTS) $(OBJMOC)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(OBJCOMP) $(LIBS)

mocables: $(SRCMOC)
uicables: $(UICDECLS) $(UICIMPLS)

$(MOC): 
	( cd $(QTDIR)/src/moc && $(MAKE) )

Makefile: say_hello.pro  /usr/local/qt/mkspecs/default/qmake.conf .configure.def \
		paths.qbas \
		check.qbas \
		check.qbas \
		check.qbas \
		check.qbas \
		check.qbas \
		check.qbas \
		check.qbas \
		check.qbas \
		build.definition \
		main.qbas \
		/usr/local/qt/lib/libqt-mt.prl
	$(QMAKE) -o Makefile say_hello.pro
qmake: 
	@$(QMAKE) -o Makefile say_hello.pro

dist: 
	@mkdir -p .obj/say_hello && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) .obj/say_hello/ && $(COPY_FILE) --parents sayhello_gui.ui.h .obj/say_hello/ && ( cd `dirname .obj/say_hello` && $(TAR) say_hello.tar say_hello && $(GZIP) say_hello.tar ) && $(MOVE) `dirname .obj/say_hello`/say_hello.tar.gz . && $(DEL_FILE) -r .obj/say_hello

mocclean:
	-$(DEL_FILE) $(OBJMOC)
	-$(DEL_FILE) $(SRCMOC)

uiclean:
	-$(DEL_FILE) $(UICIMPLS) $(UICDECLS)

yaccclean:
lexclean:
clean: mocclean uiclean
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) a.out ".configure.def" config.h ".l_temp" ".help_temp" ".summary.log"
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) $(TARGET)


FORCE:

####### Compile

.obj/main.o: main.cpp .ui/sayhello_gui.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/main.o main.cpp

.ui/sayhello_gui.h: sayhello_gui.ui 
	$(UIC) sayhello_gui.ui -o .ui/sayhello_gui.h

.ui/sayhello_gui.cpp: .ui/sayhello_gui.h sayhello_gui.ui 
	$(UIC) sayhello_gui.ui -i sayhello_gui.h -o .ui/sayhello_gui.cpp

.obj/sayhello_gui.o: .ui/sayhello_gui.cpp sayhello_gui.ui.h \
		.ui/sayhello_gui.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/sayhello_gui.o .ui/sayhello_gui.cpp

.obj/moc_sayhello_gui.o: .moc/moc_sayhello_gui.cpp  .ui/sayhello_gui.h 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/moc_sayhello_gui.o .moc/moc_sayhello_gui.cpp

.moc/moc_sayhello_gui.cpp: $(MOC) .ui/sayhello_gui.h
	$(MOC) .ui/sayhello_gui.h -o .moc/moc_sayhello_gui.cpp

####### Install

install:  

uninstall:  

